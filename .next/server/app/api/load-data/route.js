"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/load-data/route";
exports.ids = ["app/api/load-data/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "node:events":
/*!******************************!*\
  !*** external "node:events" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:events");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("node:process");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fload-data%2Froute&page=%2Fapi%2Fload-data%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fload-data%2Froute.ts&appDir=%2FUsers%2Ffedericocaccia%2Fcode%2Fdaily-review%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ffedericocaccia%2Fcode%2Fdaily-review&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fload-data%2Froute&page=%2Fapi%2Fload-data%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fload-data%2Froute.ts&appDir=%2FUsers%2Ffedericocaccia%2Fcode%2Fdaily-review%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ffedericocaccia%2Fcode%2Fdaily-review&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_federicocaccia_code_daily_review_src_app_api_load_data_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/load-data/route.ts */ \"(rsc)/./src/app/api/load-data/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/load-data/route\",\n        pathname: \"/api/load-data\",\n        filename: \"route\",\n        bundlePath: \"app/api/load-data/route\"\n    },\n    resolvedPagePath: \"/Users/federicocaccia/code/daily-review/src/app/api/load-data/route.ts\",\n    nextConfigOutput,\n    userland: _Users_federicocaccia_code_daily_review_src_app_api_load_data_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/load-data/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZsb2FkLWRhdGElMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmxvYWQtZGF0YSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmxvYWQtZGF0YSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmZlZGVyaWNvY2FjY2lhJTJGY29kZSUyRmRhaWx5LXJldmlldyUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZmZWRlcmljb2NhY2NpYSUyRmNvZGUlMkZkYWlseS1yZXZpZXcmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ3NCO0FBQ25HO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFpbHktcmV2aWV3Lz83ODg2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9mZWRlcmljb2NhY2NpYS9jb2RlL2RhaWx5LXJldmlldy9zcmMvYXBwL2FwaS9sb2FkLWRhdGEvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2xvYWQtZGF0YS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2xvYWQtZGF0YVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvbG9hZC1kYXRhL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL2ZlZGVyaWNvY2FjY2lhL2NvZGUvZGFpbHktcmV2aWV3L3NyYy9hcHAvYXBpL2xvYWQtZGF0YS9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvbG9hZC1kYXRhL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fload-data%2Froute&page=%2Fapi%2Fload-data%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fload-data%2Froute.ts&appDir=%2FUsers%2Ffedericocaccia%2Fcode%2Fdaily-review%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ffedericocaccia%2Fcode%2Fdaily-review&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/lib/spreadsheet.ts":
/*!****************************************!*\
  !*** ./src/app/api/lib/spreadsheet.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HEADERS: () => (/* binding */ HEADERS),\n/* harmony export */   ensureAndLoadDay: () => (/* binding */ ensureAndLoadDay),\n/* harmony export */   ensureDayExists: () => (/* binding */ ensureDayExists),\n/* harmony export */   updateField: () => (/* binding */ updateField),\n/* harmony export */   updateNotes: () => (/* binding */ updateNotes)\n/* harmony export */ });\n/* harmony import */ var google_spreadsheet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! google-spreadsheet */ \"(rsc)/./node_modules/google-spreadsheet/dist/index.mjs\");\n/* harmony import */ var google_auth_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! google-auth-library */ \"(rsc)/./node_modules/google-auth-library/build/src/index.js\");\n\n\n// Constantes\nconst MAX_RETRIES = 3;\nconst RETRY_DELAY = 1000; // ms\nconst OPERATION_TIMEOUT = 1000; // 5 segundos máximo por operación\nconst RATE_LIMIT_DELAY = 1000; // Aumentado a 5 segundos entre operaciones\n// Cache de conexión y datos\nlet cachedDoc = null;\nlet lastRequestTime = 0;\nlet cachedRows = null;\nlet lastRowsFetch = 0;\nconst CACHE_TTL = 5000; // Aumentado a 5 segundos de TTL para el cache\nconst ROW_CACHE = {}; // Cache para filas individuales\nasync function waitForRateLimit() {\n    const now = Date.now();\n    const timeSinceLastRequest = now - lastRequestTime;\n    if (timeSinceLastRequest < RATE_LIMIT_DELAY) {\n        await wait(RATE_LIMIT_DELAY - timeSinceLastRequest);\n    }\n    lastRequestTime = Date.now();\n}\nasync function ensureHeaders(sheet) {\n    try {\n        // Primero cargar la hoja\n        await sheet.loadHeaderRow();\n        const headerValues = sheet.headerValues;\n        // Verificar qué headers faltan\n        const missingHeaders = HEADERS.filter((header)=>!headerValues.includes(header));\n        if (missingHeaders.length > 0) {\n            console.log(\"Adding new headers at the end:\", missingHeaders);\n            // Calcular el número total de columnas necesarias\n            const totalColumns = headerValues.length + missingHeaders.length;\n            // Redimensionar la hoja si es necesario\n            if (sheet.columnCount < totalColumns) {\n                console.log(`Resizing sheet from ${sheet.columnCount} to ${totalColumns} columns`);\n                await sheet.resize({\n                    columnCount: totalColumns\n                });\n            }\n            // Agregar los headers faltantes al final\n            const newHeaders = [\n                ...headerValues,\n                ...missingHeaders\n            ];\n            await sheet.setHeaderRow(newHeaders);\n        }\n    } catch (error) {\n        console.error(\"Error ensuring headers:\", error);\n        throw error;\n    }\n}\nasync function getSpreadsheetConnection() {\n    try {\n        // Si ya tenemos una conexión cacheada, verificar que siga siendo válida\n        if (cachedDoc) {\n            try {\n                await cachedDoc.loadInfo();\n                return cachedDoc;\n            } catch (error) {\n                console.log(\"Cached connection invalid, creating new one\");\n                cachedDoc = null;\n            }\n        }\n        const SCOPES = [\n            \"https://www.googleapis.com/auth/spreadsheets\"\n        ];\n        const jwt = new google_auth_library__WEBPACK_IMPORTED_MODULE_1__.JWT({\n            email: process.env.GOOGLE_SHEETS_CLIENT_EMAIL,\n            key: process.env.GOOGLE_SHEETS_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"),\n            scopes: SCOPES\n        });\n        const doc = new google_spreadsheet__WEBPACK_IMPORTED_MODULE_0__.GoogleSpreadsheet(process.env.GOOGLE_SHEETS_SPREADSHEET_ID, jwt);\n        await doc.loadInfo(); // Asegurarnos de que el documento está cargado\n        // Asegurarnos de que existan todas las columnas necesarias\n        const sheet = doc.sheetsByIndex[0];\n        await ensureHeaders(sheet);\n        // Solo cachear después de que todo esté correctamente inicializado\n        cachedDoc = doc;\n        return doc;\n    } catch (error) {\n        cachedDoc = null;\n        console.error(\"Error getting spreadsheet connection:\", error);\n        throw error;\n    }\n}\nasync function getSheetRows(sheet) {\n    const now = Date.now();\n    if (cachedRows && now - lastRowsFetch < CACHE_TTL) {\n        return cachedRows;\n    }\n    await waitForRateLimit();\n    cachedRows = await sheet.getRows();\n    lastRowsFetch = now;\n    return cachedRows;\n}\nconst wait = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\n// Función para ejecutar una operación con timeout\nasync function withTimeout(operation) {\n    const timeoutPromise = new Promise((_, reject)=>{\n        setTimeout(()=>reject(new Error(\"Operation timed out\")), OPERATION_TIMEOUT);\n    });\n    return Promise.race([\n        operation(),\n        timeoutPromise\n    ]);\n}\nasync function withRetry(operation) {\n    let lastError;\n    for(let attempt = 1; attempt <= MAX_RETRIES; attempt++){\n        try {\n            return await operation();\n        } catch (error) {\n            lastError = error;\n            console.error(`Attempt ${attempt} failed:`, error);\n            if (attempt === MAX_RETRIES) throw error;\n            // Si es un error de rate limit, esperamos más tiempo\n            const delay = error.status === 429 ? RETRY_DELAY * Math.pow(2, attempt + 1) // Más tiempo para rate limits\n             : RETRY_DELAY * Math.pow(2, attempt - 1); // Tiempo normal para otros errores\n            await wait(delay);\n        }\n    }\n    throw lastError;\n}\nconst HEADERS = [\n    \"date\",\n    \"workout_running\",\n    \"workout_abs\",\n    \"workout_chest\",\n    \"workout_back\",\n    \"workout_shoulders\",\n    \"workout_biceps\",\n    \"workout_triceps\",\n    \"workout_legs\",\n    \"workout_stretching\",\n    \"workout_aerobic\",\n    \"relax_yoga\",\n    \"relax_meditation\",\n    \"relax_tea\",\n    \"health_sleep_seven\",\n    \"health_acidity\",\n    \"health_systolic\",\n    \"health_diastolic\",\n    \"health_headache\",\n    \"habits_nail_biting\",\n    \"habits_posture\",\n    \"productivity_level\",\n    \"productivity_reading_time\",\n    \"nutrition_fruits\",\n    \"nutrition_polyphenols\",\n    \"nutrition_heavy_food\",\n    \"nutrition_fast_food\",\n    \"nutrition_yogurt\",\n    \"life_couple_discussions\",\n    \"life_gaming\",\n    \"notes\"\n];\n// Mapa de tipos de campos\nconst FIELD_TYPES = {\n    \"workout_running\": \"minutes\",\n    \"workout_abs\": \"boolean\",\n    \"workout_chest\": \"boolean\",\n    \"workout_back\": \"boolean\",\n    \"workout_shoulders\": \"boolean\",\n    \"workout_biceps\": \"boolean\",\n    \"workout_triceps\": \"boolean\",\n    \"workout_legs\": \"boolean\",\n    \"workout_stretching\": \"boolean\",\n    \"workout_aerobic\": \"boolean\",\n    \"relax_yoga\": \"boolean\",\n    \"relax_meditation\": \"boolean\",\n    \"relax_tea\": \"boolean\",\n    \"health_sleep_seven\": \"boolean\",\n    \"health_acidity\": \"boolean\",\n    \"health_systolic\": \"minutes\",\n    \"health_diastolic\": \"minutes\",\n    \"health_headache\": \"boolean\",\n    \"habits_nail_biting\": \"boolean\",\n    \"habits_posture\": \"boolean\",\n    \"productivity_level\": \"slider\",\n    \"productivity_reading_time\": \"minutes\",\n    \"nutrition_fruits\": \"minutes\",\n    \"nutrition_polyphenols\": \"boolean\",\n    \"nutrition_heavy_food\": \"boolean\",\n    \"nutrition_fast_food\": \"boolean\",\n    \"nutrition_yogurt\": \"boolean\",\n    \"life_couple_discussions\": \"slider\",\n    \"life_gaming\": \"boolean\",\n    \"notes\": \"text\"\n};\nasync function updateField(date, sectionId, fieldId, value) {\n    return withRetry(async ()=>{\n        const doc = await getSpreadsheetConnection();\n        const sheet = doc.sheetsByIndex[0];\n        // Una sola lectura para encontrar o crear la fila\n        const rows = await sheet.getRows();\n        const rowIndex = rows.findIndex((row)=>row.get(\"date\") === date);\n        const fieldKey = `${sectionId}_${fieldId}`;\n        try {\n            if (rowIndex === -1) {\n                // Si no existe la fila, la creamos con TODOS los campos inicializados\n                const newRow = {\n                    date\n                };\n                // Inicializar todos los campos con sus valores por defecto según su tipo\n                HEADERS.forEach((header)=>{\n                    if (header === \"date\") return; // Skip date as it's already set\n                    const fieldType = FIELD_TYPES[header];\n                    switch(fieldType){\n                        case \"boolean\":\n                            newRow[header] = \"FALSE\";\n                            break;\n                        case \"minutes\":\n                            newRow[header] = \"0\";\n                            break;\n                        case \"slider\":\n                            newRow[header] = \"1\";\n                            break;\n                        case \"text\":\n                            newRow[header] = \"\";\n                            break;\n                    }\n                });\n                // Actualizar el campo específico con el valor proporcionado\n                newRow[fieldKey] = typeof value === \"boolean\" ? value.toString().toUpperCase() : value.toString();\n                // Solo una escritura para crear la fila\n                await sheet.addRow(newRow);\n            } else {\n                // Si existe, actualizamos solo el campo específico\n                const formattedValue = typeof value === \"boolean\" ? value.toString().toUpperCase() : value.toString();\n                rows[rowIndex].set(fieldKey, formattedValue);\n                // Solo una escritura para actualizar el campo\n                await rows[rowIndex].save();\n            }\n        } catch (error) {\n            console.error(\"Error in updateField operation:\", {\n                error,\n                date,\n                sectionId,\n                fieldId,\n                value,\n                fieldKey\n            });\n            throw error;\n        }\n    });\n}\nasync function updateNotes(date, notes) {\n    return withRetry(async ()=>{\n        const doc = await getSpreadsheetConnection();\n        const sheet = doc.sheetsByIndex[0];\n        const rows = await sheet.getRows();\n        const rowIndex = rows.findIndex((row)=>row.get(\"date\") === date);\n        if (rowIndex === -1) {\n            // Si no existe la fila, la creamos con TODOS los campos inicializados\n            const newRow = {\n                date\n            };\n            // Inicializar todos los campos con sus valores por defecto según su tipo\n            HEADERS.forEach((header)=>{\n                if (header === \"date\") return; // Skip date as it's already set\n                const fieldType = FIELD_TYPES[header];\n                switch(fieldType){\n                    case \"boolean\":\n                        newRow[header] = \"FALSE\";\n                        break;\n                    case \"minutes\":\n                        newRow[header] = \"0\";\n                        break;\n                    case \"slider\":\n                        newRow[header] = \"1\";\n                        break;\n                    case \"text\":\n                        newRow[header] = header === \"notes\" ? notes : \"\";\n                        break;\n                }\n            });\n            await sheet.addRow(newRow);\n        } else {\n            rows[rowIndex].set(\"notes\", notes);\n            await rows[rowIndex].save();\n        }\n    });\n}\nasync function ensureAndLoadDay(date) {\n    return withRetry(async ()=>{\n        // Verificar cache\n        if (ROW_CACHE[date] && Date.now() - ROW_CACHE[date].timestamp < CACHE_TTL) {\n            return ROW_CACHE[date].data;\n        }\n        const doc = await getSpreadsheetConnection();\n        const sheet = doc.sheetsByIndex[0];\n        // Una sola lectura para obtener/crear los datos del día\n        const rows = await getSheetRows(sheet);\n        let row = rows.find((row)=>row.get(\"date\") === date);\n        if (!row) {\n            // Crear la fila con valores por defecto\n            const newRow = {\n                date\n            };\n            // Inicializar todos los campos con sus valores por defecto\n            HEADERS.forEach((header)=>{\n                if (header === \"date\") return;\n                const fieldType = FIELD_TYPES[header];\n                switch(fieldType){\n                    case \"boolean\":\n                        newRow[header] = \"FALSE\";\n                        break;\n                    case \"minutes\":\n                        newRow[header] = \"0\";\n                        break;\n                    case \"slider\":\n                        newRow[header] = \"1\";\n                        break;\n                    case \"text\":\n                        newRow[header] = \"\";\n                        break;\n                }\n            });\n            row = await sheet.addRow(newRow);\n        }\n        const data = {};\n        HEADERS.forEach((header)=>{\n            const value = row.get(header);\n            if (header === \"notes\") {\n                data[header] = value || \"\";\n            } else if (header === \"date\") {\n                data[header] = value;\n            } else {\n                if (value === \"TRUE\" || value === \"true\") {\n                    data[header] = true;\n                } else if (value === \"FALSE\" || value === \"false\") {\n                    data[header] = false;\n                } else if (!isNaN(Number(value)) && value !== \"\") {\n                    data[header] = Number(value);\n                } else {\n                    data[header] = value || \"\";\n                }\n            }\n        });\n        // Guardar en cache\n        ROW_CACHE[date] = {\n            data,\n            timestamp: Date.now()\n        };\n        return data;\n    });\n}\nasync function ensureDayExists(date) {\n    return withRetry(async ()=>{\n        const doc = await getSpreadsheetConnection();\n        const sheet = doc.sheetsByIndex[0];\n        // Verificar si ya existe la fila\n        const rows = await sheet.getRows();\n        const rowExists = rows.some((row)=>row.get(\"date\") === date);\n        if (!rowExists) {\n            // Crear la fila con valores por defecto\n            const newRow = {\n                date\n            };\n            // Inicializar todos los campos con sus valores por defecto\n            HEADERS.forEach((header)=>{\n                if (header === \"date\") return;\n                const fieldType = FIELD_TYPES[header];\n                switch(fieldType){\n                    case \"boolean\":\n                        newRow[header] = \"FALSE\";\n                        break;\n                    case \"minutes\":\n                        newRow[header] = \"0\";\n                        break;\n                    case \"slider\":\n                        newRow[header] = \"1\";\n                        break;\n                    case \"text\":\n                        newRow[header] = \"\";\n                        break;\n                }\n            });\n            await sheet.addRow(newRow);\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/lib/spreadsheet.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/api/load-data/route.ts":
/*!****************************************!*\
  !*** ./src/app/api/load-data/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var _lib_spreadsheet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/spreadsheet */ \"(rsc)/./src/app/api/lib/spreadsheet.ts\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\n\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const date = searchParams.get(\"date\");\n        if (!date) {\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n                error: \"Date parameter is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Verificar que las variables de entorno estén definidas\n        const requiredEnvVars = [\n            \"GOOGLE_SHEETS_PRIVATE_KEY\",\n            \"GOOGLE_SHEETS_CLIENT_EMAIL\",\n            \"GOOGLE_SHEETS_SPREADSHEET_ID\"\n        ];\n        const missingEnvVars = requiredEnvVars.filter((varName)=>!process.env[varName]);\n        if (missingEnvVars.length > 0) {\n            console.error(\"Missing environment variables:\", missingEnvVars);\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n                error: \"Configuration error\",\n                details: `Missing environment variables: ${missingEnvVars.join(\", \")}`\n            }, {\n                status: 500\n            });\n        }\n        // Log de las variables de entorno (sin mostrar valores completos por seguridad)\n        console.log(\"Environment variables status:\", {\n            PRIVATE_KEY: process.env.GOOGLE_SHEETS_PRIVATE_KEY?.slice(0, 20) + \"...\",\n            CLIENT_EMAIL: process.env.GOOGLE_SHEETS_CLIENT_EMAIL?.slice(0, 10) + \"...\",\n            SPREADSHEET_ID: process.env.GOOGLE_SHEETS_SPREADSHEET_ID?.slice(0, 10) + \"...\"\n        });\n        const data = await (0,_lib_spreadsheet__WEBPACK_IMPORTED_MODULE_0__.loadDayData)(date);\n        if (!data) {\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n                error: \"No data found\",\n                details: `No data found for date: ${date}`\n            }, {\n                status: 404\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json(data);\n    } catch (error) {\n        console.error(\"Load data error:\", error);\n        // Mejorar el mensaje de error\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n        const errorStack = error instanceof Error ? error.stack : undefined;\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            error: \"Failed to load data\",\n            details: errorMessage,\n            stack:  true ? errorStack : 0,\n            timestamp: new Date().toISOString()\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9sb2FkLWRhdGEvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlEO0FBQ047QUFFcEMsZUFBZUUsSUFBSUMsT0FBZ0I7SUFDeEMsSUFBSTtRQUNGLE1BQU0sRUFBRUMsWUFBWSxFQUFFLEdBQUcsSUFBSUMsSUFBSUYsUUFBUUcsR0FBRztRQUM1QyxNQUFNQyxPQUFPSCxhQUFhSSxHQUFHLENBQUM7UUFFOUIsSUFBSSxDQUFDRCxNQUFNO1lBQ1QsT0FBT04scURBQVlBLENBQUNRLElBQUksQ0FBQztnQkFBRUMsT0FBTztZQUE2QixHQUFHO2dCQUFFQyxRQUFRO1lBQUk7UUFDbEY7UUFFQSx5REFBeUQ7UUFDekQsTUFBTUMsa0JBQWtCO1lBQ3RCO1lBQ0E7WUFDQTtTQUNEO1FBRUQsTUFBTUMsaUJBQWlCRCxnQkFBZ0JFLE1BQU0sQ0FBQ0MsQ0FBQUEsVUFBVyxDQUFDQyxRQUFRQyxHQUFHLENBQUNGLFFBQVE7UUFDOUUsSUFBSUYsZUFBZUssTUFBTSxHQUFHLEdBQUc7WUFDN0JDLFFBQVFULEtBQUssQ0FBQyxrQ0FBa0NHO1lBQ2hELE9BQU9aLHFEQUFZQSxDQUFDUSxJQUFJLENBQUM7Z0JBQ3ZCQyxPQUFPO2dCQUNQVSxTQUFTLENBQUMsK0JBQStCLEVBQUVQLGVBQWVRLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDeEUsR0FBRztnQkFBRVYsUUFBUTtZQUFJO1FBQ25CO1FBRUEsZ0ZBQWdGO1FBQ2hGUSxRQUFRRyxHQUFHLENBQUMsaUNBQWlDO1lBQzNDQyxhQUFhUCxRQUFRQyxHQUFHLENBQUNPLHlCQUF5QixFQUFFQyxNQUFNLEdBQUcsTUFBTTtZQUNuRUMsY0FBY1YsUUFBUUMsR0FBRyxDQUFDVSwwQkFBMEIsRUFBRUYsTUFBTSxHQUFHLE1BQU07WUFDckVHLGdCQUFnQlosUUFBUUMsR0FBRyxDQUFDWSw0QkFBNEIsRUFBRUosTUFBTSxHQUFHLE1BQU07UUFDM0U7UUFFQSxNQUFNSyxPQUFPLE1BQU05Qiw2REFBV0EsQ0FBQ087UUFFL0IsSUFBSSxDQUFDdUIsTUFBTTtZQUNULE9BQU83QixxREFBWUEsQ0FBQ1EsSUFBSSxDQUFDO2dCQUN2QkMsT0FBTztnQkFDUFUsU0FBUyxDQUFDLHdCQUF3QixFQUFFYixLQUFLLENBQUM7WUFDNUMsR0FBRztnQkFBRUksUUFBUTtZQUFJO1FBQ25CO1FBRUEsT0FBT1YscURBQVlBLENBQUNRLElBQUksQ0FBQ3FCO0lBQzNCLEVBQUUsT0FBT3BCLE9BQU87UUFDZFMsUUFBUVQsS0FBSyxDQUFDLG9CQUFvQkE7UUFFbEMsOEJBQThCO1FBQzlCLE1BQU1xQixlQUFlckIsaUJBQWlCc0IsUUFBUXRCLE1BQU11QixPQUFPLEdBQUc7UUFDOUQsTUFBTUMsYUFBYXhCLGlCQUFpQnNCLFFBQVF0QixNQUFNeUIsS0FBSyxHQUFHQztRQUUxRCxPQUFPbkMscURBQVlBLENBQUNRLElBQUksQ0FBQztZQUN2QkMsT0FBTztZQUNQVSxTQUFTVztZQUNUSSxPQUFPbkIsS0FBeUIsR0FBZ0JrQixhQUFhRSxDQUFTQTtZQUN0RUMsV0FBVyxJQUFJQyxPQUFPQyxXQUFXO1FBQ25DLEdBQUc7WUFBRTVCLFFBQVE7UUFBSTtJQUNuQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFpbHktcmV2aWV3Ly4vc3JjL2FwcC9hcGkvbG9hZC1kYXRhL3JvdXRlLnRzP2Y5NDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9hZERheURhdGEgfSBmcm9tICcuLi9saWIvc3ByZWFkc2hlZXQnO1xuaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3Q6IFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHNlYXJjaFBhcmFtcyB9ID0gbmV3IFVSTChyZXF1ZXN0LnVybCk7XG4gICAgY29uc3QgZGF0ZSA9IHNlYXJjaFBhcmFtcy5nZXQoJ2RhdGUnKTtcblxuICAgIGlmICghZGF0ZSkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6ICdEYXRlIHBhcmFtZXRlciBpcyByZXF1aXJlZCcgfSwgeyBzdGF0dXM6IDQwMCB9KTtcbiAgICB9XG5cbiAgICAvLyBWZXJpZmljYXIgcXVlIGxhcyB2YXJpYWJsZXMgZGUgZW50b3JubyBlc3TDqW4gZGVmaW5pZGFzXG4gICAgY29uc3QgcmVxdWlyZWRFbnZWYXJzID0gW1xuICAgICAgJ0dPT0dMRV9TSEVFVFNfUFJJVkFURV9LRVknLFxuICAgICAgJ0dPT0dMRV9TSEVFVFNfQ0xJRU5UX0VNQUlMJyxcbiAgICAgICdHT09HTEVfU0hFRVRTX1NQUkVBRFNIRUVUX0lEJ1xuICAgIF07XG5cbiAgICBjb25zdCBtaXNzaW5nRW52VmFycyA9IHJlcXVpcmVkRW52VmFycy5maWx0ZXIodmFyTmFtZSA9PiAhcHJvY2Vzcy5lbnZbdmFyTmFtZV0pO1xuICAgIGlmIChtaXNzaW5nRW52VmFycy5sZW5ndGggPiAwKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdNaXNzaW5nIGVudmlyb25tZW50IHZhcmlhYmxlczonLCBtaXNzaW5nRW52VmFycyk7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICBlcnJvcjogJ0NvbmZpZ3VyYXRpb24gZXJyb3InLFxuICAgICAgICBkZXRhaWxzOiBgTWlzc2luZyBlbnZpcm9ubWVudCB2YXJpYWJsZXM6ICR7bWlzc2luZ0VudlZhcnMuam9pbignLCAnKX1gXG4gICAgICB9LCB7IHN0YXR1czogNTAwIH0pO1xuICAgIH1cblxuICAgIC8vIExvZyBkZSBsYXMgdmFyaWFibGVzIGRlIGVudG9ybm8gKHNpbiBtb3N0cmFyIHZhbG9yZXMgY29tcGxldG9zIHBvciBzZWd1cmlkYWQpXG4gICAgY29uc29sZS5sb2coJ0Vudmlyb25tZW50IHZhcmlhYmxlcyBzdGF0dXM6Jywge1xuICAgICAgUFJJVkFURV9LRVk6IHByb2Nlc3MuZW52LkdPT0dMRV9TSEVFVFNfUFJJVkFURV9LRVk/LnNsaWNlKDAsIDIwKSArICcuLi4nLFxuICAgICAgQ0xJRU5UX0VNQUlMOiBwcm9jZXNzLmVudi5HT09HTEVfU0hFRVRTX0NMSUVOVF9FTUFJTD8uc2xpY2UoMCwgMTApICsgJy4uLicsXG4gICAgICBTUFJFQURTSEVFVF9JRDogcHJvY2Vzcy5lbnYuR09PR0xFX1NIRUVUU19TUFJFQURTSEVFVF9JRD8uc2xpY2UoMCwgMTApICsgJy4uLidcbiAgICB9KTtcblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBsb2FkRGF5RGF0YShkYXRlKTtcbiAgICBcbiAgICBpZiAoIWRhdGEpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IFxuICAgICAgICBlcnJvcjogJ05vIGRhdGEgZm91bmQnLFxuICAgICAgICBkZXRhaWxzOiBgTm8gZGF0YSBmb3VuZCBmb3IgZGF0ZTogJHtkYXRlfWBcbiAgICAgIH0sIHsgc3RhdHVzOiA0MDQgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKGRhdGEpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0xvYWQgZGF0YSBlcnJvcjonLCBlcnJvcik7XG4gICAgXG4gICAgLy8gTWVqb3JhciBlbCBtZW5zYWplIGRlIGVycm9yXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlID0gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcic7XG4gICAgY29uc3QgZXJyb3JTdGFjayA9IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5zdGFjayA6IHVuZGVmaW5lZDtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBlcnJvcjogJ0ZhaWxlZCB0byBsb2FkIGRhdGEnLFxuICAgICAgZGV0YWlsczogZXJyb3JNZXNzYWdlLFxuICAgICAgc3RhY2s6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnID8gZXJyb3JTdGFjayA6IHVuZGVmaW5lZCxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfSwgeyBzdGF0dXM6IDUwMCB9KTtcbiAgfVxufSAiXSwibmFtZXMiOlsibG9hZERheURhdGEiLCJOZXh0UmVzcG9uc2UiLCJHRVQiLCJyZXF1ZXN0Iiwic2VhcmNoUGFyYW1zIiwiVVJMIiwidXJsIiwiZGF0ZSIsImdldCIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsInJlcXVpcmVkRW52VmFycyIsIm1pc3NpbmdFbnZWYXJzIiwiZmlsdGVyIiwidmFyTmFtZSIsInByb2Nlc3MiLCJlbnYiLCJsZW5ndGgiLCJjb25zb2xlIiwiZGV0YWlscyIsImpvaW4iLCJsb2ciLCJQUklWQVRFX0tFWSIsIkdPT0dMRV9TSEVFVFNfUFJJVkFURV9LRVkiLCJzbGljZSIsIkNMSUVOVF9FTUFJTCIsIkdPT0dMRV9TSEVFVFNfQ0xJRU5UX0VNQUlMIiwiU1BSRUFEU0hFRVRfSUQiLCJHT09HTEVfU0hFRVRTX1NQUkVBRFNIRUVUX0lEIiwiZGF0YSIsImVycm9yTWVzc2FnZSIsIkVycm9yIiwibWVzc2FnZSIsImVycm9yU3RhY2siLCJzdGFjayIsInVuZGVmaW5lZCIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/load-data/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/lodash","vendor-chunks/google-auth-library","vendor-chunks/tr46","vendor-chunks/mime-db","vendor-chunks/axios","vendor-chunks/bignumber.js","vendor-chunks/node-fetch","vendor-chunks/whatwg-url","vendor-chunks/gaxios","vendor-chunks/google-spreadsheet","vendor-chunks/json-bigint","vendor-chunks/follow-redirects","vendor-chunks/google-logging-utils","vendor-chunks/gcp-metadata","vendor-chunks/debug","vendor-chunks/form-data","vendor-chunks/https-proxy-agent","vendor-chunks/gtoken","vendor-chunks/uuid","vendor-chunks/agent-base","vendor-chunks/asynckit","vendor-chunks/jws","vendor-chunks/jwa","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/webidl-conversions","vendor-chunks/combined-stream","vendor-chunks/base64-js","vendor-chunks/mime-types","vendor-chunks/proxy-from-env","vendor-chunks/extend","vendor-chunks/ms","vendor-chunks/supports-color","vendor-chunks/delayed-stream","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time","vendor-chunks/is-stream","vendor-chunks/has-flag"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fload-data%2Froute&page=%2Fapi%2Fload-data%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fload-data%2Froute.ts&appDir=%2FUsers%2Ffedericocaccia%2Fcode%2Fdaily-review%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ffedericocaccia%2Fcode%2Fdaily-review&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();